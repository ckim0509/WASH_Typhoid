# load libraries
library (brms)
library (dplyr)
library (forcats)
library (ggplot2)
library (ggridges)
library (glue)
library (metafor)
library (readxl)
library (rstan)
library (stringr)
library (tidybayes)
library (googlesheets4)
library (data.table)
# remove all objects from workspace
rm (list = ls ())
setwd("~/GitHub/WASH_typhoid")
# start time
start_time <- Sys.time ()
print (paste0 ("start time = ", start_time))
# import data -- combined data
# input_articles <- read_excel("data/input_articles.xlsx")
dat <- read_sheet('https://docs.google.com/spreadsheets/d/1ArKNfpa124oPdrbGK1-9PnzRWWvffsxgOUfgCVs_p2Q/edit#gid=0', col_types = "ccccccccccccccc")
# parsing test
ci_text <- "2.5-21"
ci_text <- ".19-1.0"
lb <- grep("[0-9]*", ci_text, value = T)
# as.numeric(str_extract_all(ci_text,"\\(?[0-9,.]+\\)?")[[1]])
as.numeric(str_extract_all(ci_text, "[0-9.]+")[[1]])
calc_se <- function(lower, upper){
se <- (upper - lower) / (2 * qnorm(0.975))
return (se)
}
# rename the columns
dat <- dat %>% rename("mOR"  = "Crude OR",
"mCI"  = "Crude OR CI",
"aOR"  = "Adjusted OR",
"aCI"  = "Adjusted OR CI")
dat <- data.table(dat)
# remove the blank rows
dat <- dat[!(is.na(dat$mOR) & is.na(dat$aOR)),]
# remove values not classified
dat <- dat[!(dat$`JMP WASH Category` == "Not Classified")]
# remove reference values
dat <- dat[(dat$mOR != "ref" | is.na(dat$mOR)) & (dat$aOR != "ref" | is.na(dat$aOR)),]
# remove studies not using blood culture to confirm typhoid
# check the number of studies not using blood culture to confirm typhoid
# dat %>% filter(dat$Culture == "No") %>% count(Author, Culture)
dat <- dat[dat$Culture != "No",]
# inspect JMP WASH Category
unique(dat$`JMP WASH Category`)
dat %>% count(`JMP WASH Category`)
category_meta <- c("Water Source (Improved)",
"Water Source (Surface water)",
"Water Treatment (Treated water)",
"Water Treatment (Untreated water)",
"Sanitation (Open defecation)",
"Hygiene (Basic)",
"Hygiene (Limited)")
# create baseline data
OR <- as.numeric(ifelse(is.na(dat$aOR), dat$mOR, dat$aOR))
ci_text <- ifelse(is.na(dat$aCI), dat$mCI, dat$aCI)
ci <- str_extract_all(ci_text, "[0-9.]+")
lower <- as.numeric(sapply(ci, function(x) x[1]))
upper <- as.numeric(sapply(ci, function(x) x[2]))
se <- calc_se(lower = log(lower), upper = log(upper))
input_data <- data.frame(category = dat$`JMP WASH Category`,
study    = dat$Study,
log_OR   = log(OR),
SE       = se)
meta_freq <- function(input_category, image_png){
input_dat_freq <- input_data %>% filter(input_data$category == input_category)
# input_dat_freq <- input_data %>% filter(input_data$category == "Water Source (Improved)")
# input_dat_freq <- input_data %>% filter(input_data$category == "Water Treatment (Untreated water)")
# frequentist random-effect meta-analysis
res <- rma(yi = log_OR, sei = SE, data = input_dat_freq)
summary <- summary(res)
# forest plot
# forest(res, atransf=exp)
# forest(res)
# save funnel plot
png(file = file.path("figures", image_png), width = 1600, height = 1400, res = 300)
funnel (res, xlab = "Log odds ratio") # Log odds ratio with standard error of log odds ratio
# funnel (res, atransf = exp, xlab = "Odds ratio")
title(input_category)
dev.off()
return(summary)}
Water_Source_Improve_fre <-
meta_freq(input_category = "Water Source (Improved)",
image_png      = "Water Source (Improved).png")
Water_Source_Surface_water_fre <-
meta_freq(input_category = "Water Source (Surface water)",
image_png      = "Water Source (Surface water).png")
Water_Treatment_Treated_water_fre <-
meta_freq(input_category = "Water Treatment (Treated water)",
image_png      = "Water Treatment (Treated water).png")
Water_Treatment_Untreated_water_fre <-
meta_freq(input_category = "Water Treatment (Untreated water)",
image_png      = "Water Treatment (Untreated water).png")
Sanitation_Open_defecation_fre <-
meta_freq(input_category = "Sanitation (Open defecation)",
image_png      = "Sanitation (Open defecation).png")
Hygiene_Basic_fre <-
meta_freq(input_category = "Hygiene (Basic)",
image_png      = "Hygiene (Basic).png")
Hygiene_Limited_fre <-
meta_freq(input_category = "Hygiene (Limited)",
image_png      = "Hygiene (Limited).png")
input_dat_freq <- input_data %>% filter(input_data$category == "Water Source (Improved)")
res <- rma(yi = log_OR, sei = SE, data = input_dat_freq)
summary <- summary(res)
forest(res)
Water_Source_Improve_fre <-
meta_freq(input_category = "Water Source (Improved)",
image_png      = "Water Source (Improved).png")
Water_Source_Improve_fre
forest(res)
exp(-0.6750)
forest(res, atransf=exp)
Water_Source_Improve_fre <-
meta_freq(input_category = "Water Source (Improved)",
image_png      = "Water Source (Improved).png")
Water_Source_Surface_water_fre <-
meta_freq(input_category = "Water Source (Surface water)",
image_png      = "Water Source (Surface water).png")
Water_Treatment_Treated_water_fre <-
meta_freq(input_category = "Water Treatment (Treated water)",
image_png      = "Water Treatment (Treated water).png")
Water_Treatment_Untreated_water_fre <-
meta_freq(input_category = "Water Treatment (Untreated water)",
image_png      = "Water Treatment (Untreated water).png")
Sanitation_Open_defecation_fre <-
meta_freq(input_category = "Sanitation (Open defecation)",
image_png      = "Sanitation (Open defecation).png")
Hygiene_Basic_fre <-
meta_freq(input_category = "Hygiene (Basic)",
image_png      = "Hygiene (Basic).png")
Hygiene_Limited_fre <-
meta_freq(input_category = "Hygiene (Limited)",
image_png      = "Hygiene (Limited).png")
Water_Source_Improve_fre
exp(-0.6750)
exp(-1.1608)
exp(-0.1891)
input_dat_freq <- input_data %>% filter(input_data$category == "Water Source (Improved)")
res <- rma(yi = log_OR, sei = SE, data = input_dat_freq)
forest(res, atransf=exp)
input_dat_freq <- input_data %>% filter(input_data$category == "Water Treatment (Treated water)")
res <- rma(yi = log_OR, sei = SE, data = input_dat_freq)
forest(res, atransf=exp)
input_dat_freq <- input_data %>% filter(input_data$category == "Water Source (Improved)")
res <- rma(yi = log_OR, sei = SE, data = input_dat_freq)
forest(res, atransf=exp)
Water_Source_Surface_water_fre
exp(0.8305)
Water_Source_Improve_fre
Water_Source_Surface_water_fre
exp(0.8305)
exp(0.3778)
exp(1.2832)
Water_Treatment_Treated_water_fre
exp(-0.5042 )
Water_Treatment_Untreated_water_fre
exp(0.8592)
exp(0.4693)
exp(1.2491)
Sanitation_Open_defecation_fre
exp(0.1224)
exp(-0.3158)
exp(0.5607)
Hygiene_Basic_fre
exp(-0.5234)
exp(-0.8303)
exp(-0.2166)
Hygiene_Limited_fre
exp(0.8412)
exp(0.4719)
exp(1.2105)
Water_Source_Improve_fre
Water_Source_Surface_water_fre
Water_Treatment_Treated_water_fre
Water_Treatment_Untreated_water_fre
Sanitation_Open_defecation_fre
Hygiene_Basic_fre
Hygiene_Limited_fre
input_dat_freq <- input_data %>% filter(input_data$category == "Water Source (Improved)")
res <- rma(yi = log_OR, sei = SE, data = input_dat_freq)
forest(res, atransf=exp)
input_dat_freq <- input_data %>% filter(input_data$category == "Water Source (Surface water)")
res <- rma(yi = log_OR, sei = SE, data = input_dat_freq)
forest(res, atransf=exp)
input_dat_freq <- input_data %>% filter(input_data$category == "Water Treatment (Treated water)")
res <- rma(yi = log_OR, sei = SE, data = input_dat_freq)
forest(res, atransf=exp)
input_dat_freq <- input_data %>%
filter(input_data$category == "Water Treatment (Untreated water)")
res <- rma(yi = log_OR, sei = SE, data = input_dat_freq)
forest(res, atransf=exp)
input_dat_freq <- input_data %>%
filter(input_data$category == "Sanitation (Open defecation)")
res <- rma(yi = log_OR, sei = SE, data = input_dat_freq)
forest(res, atransf=exp)
input_dat_freq <- input_data %>%
filter(input_data$category == "Hygiene (Basic)")
res <- rma(yi = log_OR, sei = SE, data = input_dat_freq)
forest(res, atransf=exp)
input_dat_freq <- input_data %>%
filter(input_data$category == "Hygiene (Limited)")
res <- rma(yi = log_OR, sei = SE, data = input_dat_freq)
forest(res, atransf=exp)
Hygiene_Limited_fre
exp(0.8412)
input_dat_freq <- input_data %>%
filter(input_data$category == "Hygiene (Limited)")
res <- rma(yi = log_OR, sei = SE, data = input_dat_freq)
forest(res, atransf=exp)
